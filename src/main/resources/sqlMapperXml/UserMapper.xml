<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.wangzhixuan.mapper.UserMapper" >
  <resultMap id="BaseResultMap" type="com.wangzhixuan.model.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="loginname" property="loginname" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="age" property="age" jdbcType="TINYINT" />
    <result column="usertype" property="usertype" jdbcType="TINYINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="organization_id" property="organizationId" jdbcType="INTEGER" />
    <result column="createdate" property="createdate" jdbcType="TIMESTAMP" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, loginname, name, password, sex, age, usertype, state, organization_id, createdate, 
    phone
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>

  <!-- 根据登录名查询用户 -->
  <select id="findUserByLoginname" resultMap="BaseResultMap" parameterType="java.lang.String">
    select 
    <include refid="Base_Column_List" />
    from user
    where loginname = #{username}
  </select>

  <!-- 根据id查询用户 -->
  <select id="findUserById" resultMap="BaseResultMap" parameterType="java.lang.Long">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.wangzhixuan.model.User" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user (loginname, name, password, 
      sex, age, usertype, 
      state, organization_id, createdate, 
      phone)
    values (#{loginname,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{age,jdbcType=TINYINT}, #{usertype,jdbcType=TINYINT}, 
      #{state,jdbcType=TINYINT}, #{organizationId,jdbcType=INTEGER}, #{createdate,jdbcType=TIMESTAMP}, 
      #{phone,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.wangzhixuan.model.User" >
    <selectKey resultType="java.lang.Long" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginname != null" >
        loginname,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="usertype != null" >
        usertype,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="organizationId != null" >
        organization_id,
      </if>
      <if test="createdate != null" >
        createdate,
      </if>
      <if test="phone != null" >
        phone,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginname != null" >
        #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="age != null" >
        #{age,jdbcType=TINYINT},
      </if>
      <if test="usertype != null" >
        #{usertype,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="organizationId != null" >
        #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.wangzhixuan.model.User" >
    update user
    <set >
      <if test="loginname != null" >
        loginname = #{loginname,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=TINYINT},
      </if>
      <if test="usertype != null" >
        usertype = #{usertype,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="organizationId != null" >
        organization_id = #{organizationId,jdbcType=INTEGER},
      </if>
      <if test="createdate != null" >
        createdate = #{createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="phone != null" >
        phone = #{phone,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.wangzhixuan.model.User" >
    update user
    set loginname = #{loginname,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      age = #{age,jdbcType=TINYINT},
      usertype = #{usertype,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      organization_id = #{organizationId,jdbcType=INTEGER},
      createdate = #{createdate,jdbcType=TIMESTAMP},
      phone = #{phone,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>